# config/packages/security.yaml

security:
    password_hashers:
        App\Entity\User:
            algorithm: auto


    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    # FIREWALLS

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall específico para el endpoint de login (autenticación JWT)
        login:
            pattern:  ^/api/login
            stateless: true                       
            json_login:                           
                check_path:               /api/login
                username_path:            username    
                password_path:            password    
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        # Firewall para toda la API que requiere JWT
        api:
            pattern:  ^/api
            stateless: true                        
            jwt: ~                                

        # Firewall "main" 
        main:
            lazy: true                           
            provider: app_user_provider            
            logout: ~                              

  
    # JERARQUÍA DE ROLES
  
    # Permite que ROLE_ADMIN herede automáticamente los permisos de los demás.
    role_hierarchy:
        ROLE_ADMIN:      [ROLE_CAPACITACION, ROLE_CLASIFICACION, ROLE_INFORMACION]

    # CONTROL DE ACCESO A RUTAS
    access_control:
        # Recuperacion de contraseña
        - { path: ^/api/reset-request, roles: PUBLIC_ACCESS }
        - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }
        
        # Acceso público (sin autenticación) al endpoint de login
        - { path: ^/api/login, roles: PUBLIC_ACCESS }

        # Cualquier otra ruta bajo /api requiere autenticación JWT completa
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

        # Rutas protegidas por rol específico:
        # Solo ADMIN puede acceder a /api/admin
        - { path: ^/api/admin,            roles: ROLE_ADMIN }

        # Usuarios de CAPACITACION solo pueden acceder a /api/capacitacion
        - { path: ^/api/capacitacion,     roles: ROLE_CAPACITACION }

        # Usuarios de CLASIFICACION solo pueden acceder a /api/clasificacion
        - { path: ^/api/clasificacion,    roles: ROLE_CLASIFICACION }

        # Usuarios de INFORMACION solo pueden acceder a /api/informacion
        - { path: ^/api/informacion,      roles: ROLE_INFORMACION }

when@test:
    security:
        password_hashers:
            App\Entity\User:
                algorithm: auto
                cost: 4         # Reduce el coste para acelerar tests
                time_cost: 3
                memory_cost: 10
