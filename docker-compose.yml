services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ca_sevilla_db
      POSTGRES_USER: ca_sevilla_user
      POSTGRES_PASSWORD: "8QJrUjvs"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ca_sevilla_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./symfony-backend
      dockerfile: ./docker/php/Dockerfile
    container_name: symfony_backend
    working_dir: /var/www/app
    volumes:
      - ./symfony-backend/app:/var/www/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://ca_sevilla_user:8QJrUjvs@db:5432/ca_sevilla_db
    ports:
      - "8000:8000"
    command: >
      bash -c "
        until PGPASSWORD=8QJrUjvs psql -h db -U ca_sevilla_user -d ca_sevilla_db -c 'SELECT 1'; do
          echo 'Waiting for Postgres to be ready...';
          sleep 2;
        done;
        composer install;
        php -S 0.0.0.0:8000 -t public
      "

  frontend:
    container_name: angular_frontend
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./angular-frontend:/app
    working_dir: /app
    command: npm start

  image_watcher:
    container_name: image_watcher
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    working_dir: /app
    command: npm run watch:images
    volumes:
      - ./angular-frontend:/app

volumes:
  pgdata:
